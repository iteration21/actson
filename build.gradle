plugins {
    id "org.standardout.eclipseconfig" version "1.1.0"
    id "com.github.ben-manes.versions" version "0.13.0"
}

apply plugin: 'jacoco'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

version = '1.3.0-SNAPSHOT'
group = 'de.undercouch'
sourceCompatibility = '1.7'
targetCompatibility = '1.7'

repositories {
    jcenter()
}

tasks.withType(JavaCompile) { 
    options.compilerArgs << "-Xlint" 
}

dependencies {
    testCompile 'com.fasterxml.jackson.core:jackson-databind:2.8.4'
    testCompile 'commons-io:commons-io:2.5'
    testCompile 'junit:junit:4.12'
}

// package javadoc into a jar file
task packageJavadoc(type: Jar, dependsOn: 'javadoc') {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

// package source into a jar file
task packageSources(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

check.dependsOn jacocoTestReport

// define artifacts for upload
artifacts {
    archives jar
    archives packageJavadoc
    archives packageSources
}

// sign all artifacts
signing {
    required { gradle.taskGraph.hasTask(uploadArchives) }
    sign configurations.archives
}

// remove test dependencies from configuration-to-scope mapping
// this also removes them from the maven pom file
conf2ScopeMappings.mappings.remove(configurations.testCompile)

uploadArchives {
    repositories {
        mavenDeployer {
            // sign artifacts before upload
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
            
            // upload to sonatype OSS
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                authentication(userName: this.hasProperty('sonatypeUsername') ? sonatypeUsername : '',
                    password: this.hasProperty('sonatypePassword') ? sonatypePassword : '')
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                authentication(userName: this.hasProperty('sonatypeUsername') ? sonatypeUsername : '',
                    password: this.hasProperty('sonatypePassword') ? sonatypePassword : '')
            }
            
            // pom file details
            pom.project {
               name 'actson'
               packaging 'jar'
               description 'A reactive (non-blocking, asynchronous) JSON parser.'
               url 'https://michelkraemer.com'
 
               scm {
                   url 'scm:git:git://github.com/michel-kraemer/actson.git'
                   connection 'scm:git:git://github.com/michel-kraemer/actson.git'
                   developerConnection 'scm:git:git://github.com/michel-kraemer/actson.git'
               }
 
               licenses {
                   license {
                       name 'The Apache Software License, Version 2.0'
                       url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                       distribution 'repo'
                   }
               }
 
               developers {
                   developer {
                       id 'michel-kraemer'
                       name 'Michel Kraemer'
                       email 'michel@undercouch.de'
                   }
               }
           }
        }
    }
}
